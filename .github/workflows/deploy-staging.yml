name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: staging

    env:
      SQLSERVER_SA_PASSWORD: ${{ secrets.SQLSERVER_SA_PASSWORD }}
      ORDERDB_CONNECTIONSTRING: ${{ secrets.ORDERDB_CONNECTIONSTRING }}
      INVENTORYDB_CONNECTIONSTRING: ${{ secrets.INVENTORYDB_CONNECTIONSTRING }}
      RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
      RABBITMQ_VIRTUALHOST: ${{ secrets.RABBITMQ_VIRTUALHOST }}
      RABBITMQ_RECEIVEENDPOINT: ${{ secrets.RABBITMQ_RECEIVEENDPOINT }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Replace placeholders
      run: |
        sed -i "s|@@SQLSERVER_SA_PASSWORD@@|${SQLSERVER_SA_PASSWORD}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@ORDERDB_CONNECTIONSTRING@@|${ORDERDB_CONNECTIONSTRING}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@INVENTORYDB_CONNECTIONSTRING@@|${INVENTORYDB_CONNECTIONSTRING}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@RABBITMQ_USERNAME@@|${RABBITMQ_USERNAME}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@RABBITMQ_PASSWORD@@|${RABBITMQ_PASSWORD}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@RABBITMQ_VIRTUALHOST@@|${RABBITMQ_VIRTUALHOST}|g" deploy/docker-compose.staging.yml
        sed -i "s|@@RABBITMQ_RECEIVEENDPOINT@@|${RABBITMQ_RECEIVEENDPOINT}|g" deploy/docker-compose.staging.yml        

    - name: Pull latest images
      run: docker compose -f deploy/docker-compose.staging.yml pull

    - name: Clean previous containers
      run: docker compose -f deploy/docker-compose.staging.yml down || true

    - name: Start infrastructure
      run: docker compose -f deploy/docker-compose.staging.yml up -d

    - name: Make migration script executable
      run: chmod +x deploy/run-migrations.sh

    - name: Apply SQL Migrations
      run: ./deploy/run-migrations.sh

    - name: Deploy application services
      run: docker compose -f deploy/docker-compose.staging.yml up -d orderservice inventoryservice
