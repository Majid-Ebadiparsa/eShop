name: Deploy to Staging - Self Hosted

on:  
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy-staging-selfhosted:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted
    environment: staging

    env:
      SQLSERVER_SA_PASSWORD: ${{ secrets.SQLSERVER_SA_PASSWORD }}
      ORDERDB_CONNECTIONSTRING: ${{ secrets.ORDERDB_CONNECTIONSTRING }}
      INVENTORYDB_CONNECTIONSTRING: ${{ secrets.INVENTORYDB_CONNECTIONSTRING }}
      RABBITMQ_USERNAME: ${{ secrets.RABBITMQ__USERNAME }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ__PASSWORD }}
      RABBITMQ_VIRTUALHOST: ${{ secrets.RABBITMQ__VIRTUALHOST }}
      RABBITMQ_RECEIVEENDPOINT: ${{ secrets.RABBITMQ__RECEIVEENDPOINT }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Replace placeholders (PowerShell native)
      shell: powershell
      run: |
        (Get-Content "deploy/docker-compose.staging.yml") `
          -replace '@@SQLSERVER_SA_PASSWORD@@', "$env:SQLSERVER_SA_PASSWORD" `
          -replace '@@ORDERDB_CONNECTIONSTRING@@', "$env:ORDERDB_CONNECTIONSTRING" `
          -replace '@@INVENTORYDB_CONNECTIONSTRING@@', "$env:INVENTORYDB_CONNECTIONSTRING" `
          -replace '@@DELIVERYDB_CONNECTIONSTRING@@', "$env:DELIVERYDB_CONNECTIONSTRING" `
          -replace '@@RABBITMQ_USERNAME@@', "$env:RABBITMQ_USERNAME" `
          -replace '@@RABBITMQ_PASSWORD@@', "$env:RABBITMQ_PASSWORD" `
          -replace '@@RABBITMQ_VIRTUALHOST@@', "$env:RABBITMQ_VIRTUALHOST" `
          -replace '@@RABBITMQ_INVENTORYRECEIVEENDPOINT@@', "$env:RABBITMQ_INVENTORYRECEIVEENDPOINT" `
          -replace '@@RABBITMQ_ORDERRECEIVEENDPOINT@@', "$env:RABBITMQ_ORDERRECEIVEENDPOINT" `
          -replace '@@RABBITMQ_DELIVERYRECEIVEENDPOINT@@', "$env:RABBITMQ_DELIVERYRECEIVEENDPOINT" `
          | Set-Content "deploy/docker-compose.staging.yml"

    - name: Pull latest images
      shell: powershell
      run: |
        docker compose -f deploy/docker-compose.staging.yml pull

    - name: Clean previous containers (PowerShell safe)
      shell: powershell
      run: |
        try {
          docker compose -f deploy/docker-compose.staging.yml down
        } catch {
          Write-Host "Docker compose down failed (probably no previous containers). Continuing..."
        }

    - name: Start infrastructure
      shell: powershell
      run: |
        docker compose -f deploy/docker-compose.staging.yml up -d

    - name: Apply SQL Migrations (PowerShell call)
      shell: powershell
      run: |
        ./deploy/run-migrations.ps1

    - name: Deploy application services
      shell: powershell
      run: |
        docker compose -f deploy/docker-compose.staging.yml up -d orderservice inventoryservice deliveryservice
