name: Deploy to Dev

on:
  workflow_run:
    workflows: ["Docker Push"]
    types:
      - completed

jobs:
  deploy-dev:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted

    environment: dev

    env:
      ORDERDB_CONNECTIONSTRING: ${{ secrets.ORDERDB_CONNECTIONSTRING }}
      INVENTORYDB_CONNECTIONSTRING: ${{ secrets.INVENTORYDB_CONNECTIONSTRING }}
      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_VIRTUALHOST: ${{ secrets.RABBITMQ_VIRTUALHOST }}
      RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Replace Secrets in Docker Compose
        shell: pwsh
        run: |
          (Get-Content deploy/docker-compose.dev.yml) `
          -replace '@@ORDERDB_CONNECTIONSTRING@@', '${{ env:ORDERDB_CONNECTIONSTRING }}' `
          -replace '@@INVENTORYDB_CONNECTIONSTRING@@', '${{ env:INVENTORYDB_CONNECTIONSTRING }}' `
          -replace '@@RABBITMQ_HOST@@', '${{ env:RABBITMQ_HOST }}' `
          -replace '@@RABBITMQ_VIRTUALHOST@@', '${{ env:RABBITMQ_VIRTUALHOST }}' `
          -replace '@@RABBITMQ_USERNAME@@', '${{ env:RABBITMQ_USERNAME }}' `
          -replace '@@RABBITMQ_PASSWORD@@', '${{ env:RABBITMQ_PASSWORD }}' `
          | Set-Content deploy/docker-compose.dev.yml

      - name: Pull latest images
        run: |
          docker pull majidebadiparsajob/orderservice:latest
          docker pull majidebadiparsajob/inventoryservice:latest

      - name: Run OrderService Migrations
        run: |
          docker run --rm `
          --network="host" `
          -e ConnectionStrings__OrderDb="${{ env:ORDERDB_CONNECTIONSTRING }}" `
          -e RabbitMq__Host="${{ env:RABBITMQ_HOST }}" `
          -e RabbitMq__VirtualHost="${{ env:RABBITMQ_VIRTUALHOST }}" `
          -e RabbitMq__Username="${{ env:RABBITMQ_USERNAME }}" `
          -e RabbitMq__Password="${{ env:RABBITMQ_PASSWORD }}" `
          majidebadiparsajob/orderservice:latest `
          dotnet ef database update --context OrderDbContext

      - name: Run InventoryService Migrations
        run: |
          docker run --rm `
          --network="host" `
          -e ConnectionStrings__InventoryDb="${{ env:INVENTORYDB_CONNECTIONSTRING }}" `
          majidebadiparsajob/inventoryservice:latest `
          dotnet ef database update --context InventoryDbContext

      - name: Clean previous containers
        run: docker-compose -f deploy/docker-compose.dev.yml down
        continue-on-error: true

      - name: Deploy using docker-compose
        run: docker-compose -f deploy/docker-compose.dev.yml up -d
