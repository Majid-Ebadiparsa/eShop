name: Deploy to Staging - Self Hosted

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
jobs:
  deploy-staging-selfhosted:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted
    environment: staging

    env:
      SQLSERVER_SA_PASSWORD: ${{ secrets.SQLSERVER_SA_PASSWORD }}
      ORDERDB_CONNECTIONSTRING: ${{ secrets.ORDERDB_CONNECTIONSTRING }}
      INVENTORYDB_CONNECTIONSTRING: ${{ secrets.INVENTORYDB_CONNECTIONSTRING }}
      RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
      RABBITMQ_VIRTUALHOST: ${{ secrets.RABBITMQ_VIRTUALHOST }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Replace placeholders (PowerShell native)
      shell: powershell
      run: |
        Copy-Item "deploy/docker-compose.staging-template.yml" "deploy/docker-compose.staging.yml"
        (Get-Content "deploy/docker-compose.staging.yml") `
          -replace '@@SQLSERVER_SA_PASSWORD@@', "$env:SQLSERVER_SA_PASSWORD" `
          -replace '@@ORDERDB_CONNECTIONSTRING@@', "$env:ORDERDB_CONNECTIONSTRING" `
          -replace '@@INVENTORYDB_CONNECTIONSTRING@@', "$env:INVENTORYDB_CONNECTIONSTRING" `
          -replace '@@RABBITMQ_USERNAME@@', "$env:RABBITMQ_USERNAME" `
          -replace '@@RABBITMQ_PASSWORD@@', "$env:RABBITMQ_PASSWORD" `
          -replace '@@RABBITMQ_VIRTUALHOST@@', "$env:RABBITMQ_VIRTUALHOST" `
          | Set-Content "deploy/docker-compose.staging.yml"

    - name: Pull latest images
      run: docker compose -f deploy/docker-compose.staging.yml pull

    - name: Clean previous containers
      run: docker compose -f deploy/docker-compose.staging.yml down || true

    - name: Start infrastructure
      run: docker compose -f deploy/docker-compose.staging.yml up -d

    - name: Apply SQL Migrations (PowerShell call)
      shell: powershell
      run: |
        ./deploy/run-migrations.ps1

    - name: Deploy application services
      run: docker compose -f deploy/docker-compose.staging.yml up -d orderservice inventoryservice
